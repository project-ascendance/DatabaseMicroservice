// <auto-generated />
using System;
using DatabaseMicroservice.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatabaseMicroservice.Migrations
{
    [DbContext(typeof(CMSContentContext))]
    [Migration("20230331123718_spelling")]
    partial class spelling
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DatabaseMicroservice.Models.Fragment", b =>
                {
                    b.Property<string>("BelongsTo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FragmentId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FragmentType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NextBelongsTo")
                        .HasColumnType("longtext");

                    b.Property<string>("NextFragmentBelongsTo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NextFragmentFragmentId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NextFragmentId")
                        .HasColumnType("longtext");

                    b.Property<int>("TotalFragmentCount")
                        .HasColumnType("int");

                    b.HasKey("BelongsTo", "FragmentId");

                    b.HasIndex("NextFragmentBelongsTo", "NextFragmentFragmentId");

                    b.ToTable("Fragment");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Fragment");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DatabaseMicroservice.Models.ActiverFromFragment", b =>
                {
                    b.HasBaseType("DatabaseMicroservice.Models.Fragment");

                    b.Property<DateTime>("ActiveFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ActiveTo")
                        .HasColumnType("datetime(6)");

                    b.HasDiscriminator().HasValue("ActiverFromFragment");
                });

            modelBuilder.Entity("DatabaseMicroservice.Models.ExternalFragment", b =>
                {
                    b.HasBaseType("DatabaseMicroservice.Models.Fragment");

                    b.Property<string>("ExcernalType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("ExternalFragment");
                });

            modelBuilder.Entity("DatabaseMicroservice.Models.TextFragment", b =>
                {
                    b.HasBaseType("DatabaseMicroservice.Models.Fragment");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("TextFragment");
                });

            modelBuilder.Entity("DatabaseMicroservice.Models.Fragment", b =>
                {
                    b.HasOne("DatabaseMicroservice.Models.Fragment", "NextFragment")
                        .WithMany()
                        .HasForeignKey("NextFragmentBelongsTo", "NextFragmentFragmentId");

                    b.Navigation("NextFragment");
                });
#pragma warning restore 612, 618
        }
    }
}
